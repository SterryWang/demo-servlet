<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>demo-servlet</display-name>
     
  <!-- ==================== Default Welcome File List ===================== -->
  <!-- When a request URI refers to a directory, the default servlet looks  -->
  <!-- for a "welcome file" within that directory and, if present, to the   -->
  <!-- corresponding resource URI for display.                              -->
  <!-- If no welcome files are present, the default servlet either serves a -->
  <!-- directory listing (see default servlet configuration on how to       -->
  <!-- customize) or returns a 404 status, depending on the value of the    -->
  <!-- listings setting.                                                    -->
  <!--                                                                      -->
  <!-- If you define welcome files in your own application's web.xml        -->
  <!-- deployment descriptor, that list *replaces* the list configured      -->
  <!-- here, so be sure to include any of the default values that you wish  -->
  <!-- to use within your application.                                       -->
  <welcome-file-list>
    <welcome-file>index.html</welcome-file><!-- 此处配置首页自动跳转 -->
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  <!-- <servlet>  
       
    <servlet-name>HelloServlet</servlet-name>  
   
    <servlet-class>com.demo.servlet.test.HelloServlet</servlet-class>  
  </servlet>  
  <servlet-mapping>  
    <servlet-name>HelloServlet</servlet-name>  
    
    <url-pattern>/TomcatTest/HelloServlet2</url-pattern>  
    </servlet-mapping>   -->
    <filter>
       <filter-name>CountFilter</filter-name>
       <filter-class>com.demo.filter.test.CountFilter</filter-class>
       <init-param>
       <param-name>count</param-name>
       <param-value>5000</param-value>
       </init-param>
    </filter>
    <filter-mapping>
    <filter-name>CountFilter</filter-name>
    <url-pattern>/CountServlet</url-pattern>
    </filter-mapping>
</web-app>